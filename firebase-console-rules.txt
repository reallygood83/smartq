Firebase Console에서 아래 규칙을 복사해서 붙여넣으세요:

{
  "rules": {
    "sessions": {
      ".indexOn": ["teacherId"],
      "$sessionId": {
        ".read": "auth != null && (data.child('teacherId').val() == auth.uid || root.child('sessions').child($sessionId).child('isPublic').val() == true)",
        ".write": "auth != null && (data.child('teacherId').val() == auth.uid || !data.exists())",
        ".validate": "newData.exists() ? newData.hasChildren(['title', 'accessCode', 'sessionType', 'teacherId', 'createdAt']) : true"
      }
    },
    "questions": {
      "$sessionId": {
        ".read": "auth != null || root.child('sessions').child($sessionId).child('isPublic').val() == true",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$questionId": {
          ".write": "auth != null"
        }
      }
    },
    "sharedContents": {
      "$sessionId": {
        ".read": "auth != null || root.child('sessions').child($sessionId).child('isPublic').val() == true",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$contentId": {
          ".write": "auth != null && (newData.child('teacherId').val() == auth.uid || root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid)"
        }
      }
    },
    "feedbackRequests": {
      "$sessionId": {
        ".read": "auth != null",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$requestId": {
          ".write": "auth != null",
          ".validate": "newData.exists() ? newData.hasChildren(['requestId', 'sessionId', 'createdAt']) : true"
        }
      }
    },
    "feedbackResponses": {
      "$sessionId": {
        ".read": "auth != null",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$responseId": {
          ".write": "auth != null",
          ".validate": "newData.exists() ? newData.hasChildren(['responseId', 'requestId', 'sessionId', 'createdAt']) : true"
        }
      }
    },
    "mentorshipProfiles": {
      "$sessionId": {
        ".read": "auth != null",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$profileId": {
          ".write": "auth != null",
          ".validate": "newData.exists() ? newData.hasChildren(['profileId', 'sessionId', 'userId', 'createdAt']) : true"
        }
      }
    },
    "mentorshipMatches": {
      "$sessionId": {
        ".read": "auth != null",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$matchId": {
          ".write": "auth != null",
          ".validate": "newData.exists() ? newData.hasChildren(['matchId', 'sessionId', 'mentorId', 'menteeId', 'createdAt']) : true"
        }
      }
    },
    "feedbackAnalyses": {
      "$sessionId": {
        ".read": "auth != null",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$analysisId": {
          ".write": "auth != null",
          ".validate": "newData.exists() ? newData.hasChildren(['analysisId', 'sessionId', 'createdAt']) : true"
        }
      }
    },
    "users": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && auth.uid == $uid"
      }
    }
  }
}

적용 방법:
1. Firebase Console (https://console.firebase.google.com/) 접속
2. 프로젝트 선택
3. 왼쪽 메뉴 → Realtime Database → 규칙 탭
4. 위 규칙을 복사해서 붙여넣기
5. "게시" 버튼 클릭

또는 임시로 테스트하려면 아래 간단한 규칙 사용:
{
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null"
  }
}