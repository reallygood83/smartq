{
  "rules": {
    "sessions": {
      ".indexOn": ["teacherId", "accessCode"],
      ".read": "true",
      ".write": "auth != null",
      "$sessionId": {
        ".read": "true",
        ".write": "auth != null && (data.child('teacherId').val() == auth.uid || !data.exists())",
        ".validate": "newData.exists() ? newData.hasChildren(['title', 'accessCode', 'sessionType', 'teacherId', 'createdAt']) : true"
      }
    },
    "questions": {
      "$sessionId": {
        ".read": "true",
        ".write": "true",
        "$questionId": {
          ".write": "true",
          ".validate": "newData.exists() ? newData.hasChildren(['questionId', 'text', 'studentId', 'isAnonymous', 'createdAt', 'sessionId']) : true"
        }
      }
    },
    "sharedContents": {
      "$sessionId": {
        ".read": "auth != null || root.child('sessions').child($sessionId).child('isPublic').val() == true",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$contentId": {
          ".write": "auth != null && (newData.child('teacherId').val() == auth.uid || root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid)"
        }
      }
    },
    "feedbackRequests": {
      "$sessionId": {
        ".read": "auth != null",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$requestId": {
          ".write": "auth != null",
          ".validate": "newData.exists() ? newData.hasChildren(['requestId', 'sessionId', 'createdAt']) : true"
        }
      }
    },
    "feedbackResponses": {
      "$sessionId": {
        ".read": "auth != null",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$responseId": {
          ".write": "auth != null",
          ".validate": "newData.exists() ? newData.hasChildren(['responseId', 'requestId', 'sessionId', 'createdAt']) : true"
        }
      }
    },
    "mentorshipProfiles": {
      "$sessionId": {
        ".read": "auth != null",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$profileId": {
          ".write": "auth != null",
          ".validate": "newData.exists() ? newData.hasChildren(['profileId', 'sessionId', 'userId', 'createdAt']) : true"
        }
      }
    },
    "mentorshipMatches": {
      "$sessionId": {
        ".read": "auth != null",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$matchId": {
          ".write": "auth != null",
          ".validate": "newData.exists() ? newData.hasChildren(['matchId', 'sessionId', 'mentorId', 'menteeId', 'createdAt']) : true"
        }
      }
    },
    "feedbackAnalyses": {
      "$sessionId": {
        ".read": "auth != null",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$analysisId": {
          ".write": "auth != null",
          ".validate": "newData.exists() ? newData.hasChildren(['analysisId', 'sessionId', 'createdAt']) : true"
        }
      }
    },
    "teacherQuestions": {
      "$sessionId": {
        ".read": "true",
        ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
        "$questionId": {
          ".write": "auth != null && root.child('sessions').child($sessionId).child('teacherId').val() == auth.uid",
          ".validate": "newData.exists() ? newData.hasChildren(['questionId', 'sessionId', 'text', 'teacherId', 'order', 'source', 'status', 'createdAt']) : true"
        }
      }
    },
    "studentResponses": {
      "$sessionId": {
        ".read": "true",
        ".write": "true",
        "$responseId": {
          ".write": "true",
          ".validate": "newData.exists() ? newData.hasChildren(['responseId', 'questionId', 'sessionId', 'text', 'studentId', 'createdAt']) : true"
        }
      }
    },
    "users": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && auth.uid == $uid"
      }
    }
  }
}