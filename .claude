# SmartQ 성인 교육 확장 개발 계획

## 프로젝트 개요
SmartQ를 초등교육에서 성인교육까지 전 생애 학습을 지원하는 포괄적 플랫폼으로 확장

## 개발 원칙
- 교육 레벨별 맞춤 UX/UI 제공
- AI 분석의 교수자/학습자 양방향 활용
- 최신 교육 트렌드 및 기술 반영
- 단계적 구현으로 안정성 확보

## Phase 1: 교육 레벨 선택 시스템 (1-2일)

### 1.1 교육 레벨 타입 정의
- [ ] `/src/types/education.ts` 생성
- [ ] 5단계 교육 레벨 (초등/중등/고등/대학/성인) 정의
- [ ] 레벨별 설정 인터페이스 구현

### 1.2 레벨 선택 Context 구현  
- [ ] `/src/contexts/EducationLevelContext.tsx` 생성
- [ ] 전역 상태 관리 및 localStorage 연동
- [ ] 레벨 변경 시 UI 자동 적응 시스템

### 1.3 레벨 선택 컴포넌트
- [ ] `/src/components/common/LevelSelector.tsx` 생성
- [ ] 직관적인 레벨 선택 UI
- [ ] 레벨별 설명 및 대상 안내

## Phase 2: 스마트 용어 변환 시스템 (1일)

### 2.1 용어 매핑 시스템
- [ ] `/src/lib/terminology.ts` 생성
- [ ] 교육 레벨별 용어 매핑 테이블
- [ ] 동적 용어 변환 Hook 구현

### 2.2 UI 텍스트 자동 변환
- [ ] 기존 컴포넌트에 용어 변환 적용
- [ ] 성인용/아동용 톤앤매너 차별화
- [ ] 상황별 적절한 존댓말/반말 구분

## Phase 3: 레벨별 UI/UX 적응 (2일)

### 3.1 레벨별 테마 시스템
- [ ] `/src/styles/themes.ts` 생성  
- [ ] 색상, 폰트, 레이아웃 레벨별 최적화
- [ ] CSS Custom Properties 활용

### 3.2 적응형 컴포넌트 구현
- [ ] 기존 Header, Card, Button 컴포넌트 레벨 적응
- [ ] 초등: 큰 아이콘, 밝은 색상
- [ ] 성인: 세련된 디자인, 전문적 색조

### 3.3 애니메이션 및 인터랙션
- [ ] Framer Motion 활용한 부드러운 전환
- [ ] 레벨 변경 시 점진적 UI 변화

## Phase 4: 성인용 세션 타입 확장 (2일)

### 4.1 성인 교육 세션 타입 추가
- [ ] SessionType enum 확장
- [ ] 기업연수, 대학강의, 세미나, 워크샵, 컨퍼런스 타입
- [ ] 각 타입별 특성 및 권장 설정 정의

### 4.2 성인용 세션 생성 폼
- [ ] `/src/components/teacher/AdultSessionForm.tsx` 생성
- [ ] 전문적인 입력 항목 (학습목표, 대상, 사전요구사항)
- [ ] 참여자 규모별 권장 설정

### 4.3 세션 타입별 아이콘 및 설명
- [ ] 직관적인 아이콘 세트 구성
- [ ] 각 타입별 상세 설명 및 활용 가이드

## Phase 5: 성인용 AI 프롬프트 시스템 (2-3일)

### 5.1 레벨별 AI 프롬프트 관리
- [ ] `/src/lib/aiPrompts.ts` 생성
- [ ] 교육 레벨별 시스템 프롬프트 차별화
- [ ] Context7 MCP 활용한 최신 교육 트렌드 반영

### 5.2 성인 교육 특화 분석
- [ ] 실무 중심 질문 분석 프롬프트
- [ ] 경험 기반 학습 활동 추천
- [ ] 전문성 수준별 맞춤 설명

### 5.3 교수자-학습자 양방향 분석
- [ ] 교수자용: 교육 효과성, 개선점 분석
- [ ] 학습자용: 학습 성과, 추가 학습 방향 안내
- [ ] 실시간 교육 품질 모니터링

## Phase 6: 성인 교육 특화 기능 (3-4일)

### 6.1 전문적 피드백 시스템
- [ ] 익명 강의 평가 시스템
- [ ] 5점 척도 + 서술형 피드백
- [ ] 실시간 만족도 조사

### 6.2 네트워킹 및 협업 기능
- [ ] 참여자 프로필 시스템
- [ ] 소그룹 토론방 생성
- [ ] 관심사 기반 매칭

### 6.3 자료 공유 및 관리
- [ ] 문서/프레젠테이션 업로드 시스템
- [ ] 실시간 자료 공유
- [ ] 다운로드 및 아카이브 기능

## Phase 7: 고급 분석 및 보고서 (2-3일)

### 7.1 AI 기반 수업 분석 보고서
- [ ] 참여도, 이해도, 만족도 종합 분석
- [ ] 개선 방안 및 차시 계획 추천
- [ ] 시각적 분석 차트 및 그래프

### 7.2 PDF 보고서 생성
- [ ] 교수자용 상세 분석 보고서
- [ ] 학습자용 개인 학습 결과서
- [ ] 기관용 교육 효과성 리포트

### 7.3 데이터 시각화
- [ ] Chart.js 또는 D3.js 활용
- [ ] 참여 패턴, 질문 유형 분석
- [ ] 시계열 데이터 트렌드 분석

## Phase 8: 모바일 최적화 및 PWA (2일)

### 8.1 반응형 디자인 강화
- [ ] 성인용 모바일 UI 최적화
- [ ] 터치 인터랙션 개선
- [ ] 큰 화면 활용 레이아웃

### 8.2 PWA 구현
- [ ] Service Worker 등록
- [ ] 오프라인 지원
- [ ] 앱 아이콘 및 스플래시 화면

## 기술 스택 및 도구

### 핵심 기술
- Next.js 15 + TypeScript
- Firebase (Auth, Realtime Database, Storage)
- Tailwind CSS + Framer Motion
- Google Gemini API

### MCP 도구 활용
- Context7: 최신 교육 트렌드 데이터 수집
- Filesystem: 파일 관리 및 구조 최적화  
- Memory: 개발 진행 상황 추적
- Sequential Thinking: 복잡한 로직 설계

### 새로운 라이브러리
- Chart.js: 데이터 시각화
- html2canvas + jsPDF: PDF 생성
- React Hook Form: 폼 관리
- Zustand: 상태 관리 (Context 보완)

## 품질 관리

### 테스트 전략
- 각 Phase 완료 시 기능 테스트
- 교육 레벨별 사용자 시나리오 검증
- 성능 및 접근성 테스트

### 문서화
- 각 기능별 README 업데이트
- API 문서 자동 생성
- 사용자 가이드 제작

## 배포 전략

### 단계별 배포
- Phase 1-3: 기본 레벨 시스템 배포
- Phase 4-5: 성인 교육 기능 배포  
- Phase 6-8: 고급 기능 점진적 배포

### 피드백 수집
- 베타 테스터 모집 (교육자 대상)
- 사용자 피드백 기반 개선
- 실제 교육 현장 적용 테스트

---

## 다음 단계
Phase 1부터 순차적으로 진행하며, 각 단계 완료 시 커밋 및 배포하여 점진적 개선 추진